{"ast":null,"code":"var _jsxFileName = \"/Users/michaelmerlo/newProjects/nextProj/components/Weather.js\";\nvar __jsx = React.createElement;\nimport React, { Component } from 'react';\nimport { Card, CardImg, CardText, CardBody, CardTitle, CardSubtitle, Button } from 'reactstrap';\n\nclass Weather extends Component {\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    return __jsx(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 14\n      },\n      __self: this\n    }, __jsx(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15\n      },\n      __self: this\n    }, \"HEY this is the weather page\"), __jsx(Card, {\n      className: \"card\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16\n      },\n      __self: this\n    }, this.props.currentWeather.weather[0].description === 'overcast clouds' ? __jsx(CardImg, {\n      top: true,\n      width: \"100%\",\n      src: \"/static/cloud.png\",\n      alt: \"Card image cap\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17\n      },\n      __self: this\n    }) : __jsx(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17\n      },\n      __self: this\n    }), __jsx(CardBody, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20\n      },\n      __self: this\n    }, __jsx(CardTitle, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21\n      },\n      __self: this\n    }, \"Card title\"), __jsx(CardSubtitle, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22\n      },\n      __self: this\n    }, \"Card subtitle\"), __jsx(CardText, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23\n      },\n      __self: this\n    }, \"Some quick example text to build on the card title and make up the bulk of the card's content.\"), __jsx(Button, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24\n      },\n      __self: this\n    }, \"Button\"))), __jsx(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    }, this.props.info.name, \" Weather\"), __jsx(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }, \"Country: \", this.props.info.country), __jsx(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }, \"Lattitude: \", this.props.info.coord.lat), __jsx(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }, \"Longitude: \", this.props.info.coord.lon), __jsx(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }, \"Temp: \", (this.props.currentWeather.main.temp * 9 / 5 - 459.67).toFixed(2)), __jsx(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }, \"Feels Like: \", (this.props.currentWeather.main.feels_like * 9 / 5 - 459.67).toFixed(2)), __jsx(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }, \"Humidity: \", this.props.currentWeather.main.humidity, \" %\"), __jsx(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }, \"Description: \", this.props.currentWeather.weather[0].description), this.props.currentWeather.weather[0].description === 'overcast clouds' ? __jsx(\"img\", {\n      src: \"/static/cloud.png\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }) : __jsx(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }), __jsx(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }, \"Windspeed: \", this.props.currentWeather.wind.speed));\n  }\n\n}\n\nexport default Weather;","map":{"version":3,"sources":["/Users/michaelmerlo/newProjects/nextProj/components/Weather.js"],"names":["React","Component","Card","CardImg","CardText","CardBody","CardTitle","CardSubtitle","Button","Weather","constructor","props","render","currentWeather","weather","description","info","name","country","coord","lat","lon","main","temp","toFixed","feels_like","humidity","wind","speed"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport {\n  Card, CardImg, CardText, CardBody,\n  CardTitle, CardSubtitle, Button\n} from 'reactstrap';\n\nclass Weather extends Component {\n    constructor(props){\n        super(props)\n\n    }\n    render(){\n        return(\n            <div>\n            <h1>HEY this is the weather page</h1>\n            <Card className=\"card\">\n            { (this.props.currentWeather.weather[0].description === 'overcast clouds')? <CardImg top width=\"100%\" src='/static/cloud.png' alt=\"Card image cap\" />: <p></p>\n            }\n\n              <CardBody>\n              <CardTitle>Card title</CardTitle>\n              <CardSubtitle>Card subtitle</CardSubtitle>\n              <CardText>Some quick example text to build on the card title and make up the bulk of the card's content.</CardText>\n              <Button>Button</Button>\n              </CardBody>\n            </Card>\n            <h1>{this.props.info.name} Weather</h1>\n\n            <p>Country: {this.props.info.country}</p>\n            <p>Lattitude: {this.props.info.coord.lat}</p>\n            <p>Longitude: {this.props.info.coord.lon}</p>\n            <p>Temp: {((this.props.currentWeather.main.temp * 9/5) - 459.67).toFixed(2)}</p>\n            <p>Feels Like: {((this.props.currentWeather.main.feels_like* 9/5) - 459.67).toFixed(2)}</p>\n            <p>Humidity: {this.props.currentWeather.main.humidity} %</p>\n            <p>Description: {this.props.currentWeather.weather[0].description}</p>\n            { (this.props.currentWeather.weather[0].description === 'overcast clouds')? <img src='/static/cloud.png'/> : <p></p>\n            }\n            <p>Windspeed: {this.props.currentWeather.wind.speed}</p>\n      \n            </div>\n        )\n    }\n}\n\nexport default Weather;\n"]},"metadata":{},"sourceType":"module"}