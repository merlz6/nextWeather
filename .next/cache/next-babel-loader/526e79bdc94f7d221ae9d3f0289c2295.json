{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nvar _jsxFileName = \"/Users/michaelmerlo/newProjects/nextProj/pages/index.js\";\nimport _JSXStyle from \"styled-jsx/style\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Link from 'next/link';\nimport Layout from '../components/Layout';\nimport fetch from 'isomorphic-unfetch';\nimport Weather from '../components/Weather';\n\nvar Index = function Index(props) {\n  return __jsx(\"div\", {\n    className: \"jsx-4154652290\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8\n    },\n    __self: this\n  }, __jsx(\"h1\", {\n    className: \"jsx-4154652290\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9\n    },\n    __self: this\n  }, props.info.name, \" Weather\"), __jsx(\"p\", {\n    className: \"jsx-4154652290\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11\n    },\n    __self: this\n  }, \"Country: \", props.info.country), __jsx(\"p\", {\n    className: \"jsx-4154652290\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12\n    },\n    __self: this\n  }, \"Lattitude: \", props.info.coord.lat), __jsx(\"p\", {\n    className: \"jsx-4154652290\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13\n    },\n    __self: this\n  }, \"Longitude: \", props.info.coord.lon), __jsx(\"p\", {\n    className: \"jsx-4154652290\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  }, \"Temp: \", props.currentWeather.main.temp), __jsx(\"p\", {\n    className: \"jsx-4154652290\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }, \"Feels Like: \", props.currentWeather.main.feels_like), __jsx(\"p\", {\n    className: \"jsx-4154652290\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }, \"Humidity: \", props.currentWeather.main.humidity, \" %\"), __jsx(\"p\", {\n    className: \"jsx-4154652290\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }, \"Description: \", props.currentWeather.weather[0].description), __jsx(\"p\", {\n    className: \"jsx-4154652290\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }, \"Windspeed: \", props.currentWeather.wind.speed), __jsx(_JSXStyle, {\n    id: \"4154652290\",\n    __self: this\n  }, \"h1.jsx-4154652290,.jsx-4154652290{font-family:'Open Sans';color:grey;}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9taWNoYWVsbWVybG8vbmV3UHJvamVjdHMvbmV4dFByb2ovcGFnZXMvaW5kZXguanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBa0JnQixBQUdtQyx3QkFFN0IsV0FBQyIsImZpbGUiOiIvVXNlcnMvbWljaGFlbG1lcmxvL25ld1Byb2plY3RzL25leHRQcm9qL3BhZ2VzL2luZGV4LmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IExpbmsgZnJvbSAnbmV4dC9saW5rJztcbmltcG9ydCBMYXlvdXQgZnJvbSAnLi4vY29tcG9uZW50cy9MYXlvdXQnO1xuaW1wb3J0IGZldGNoIGZyb20gJ2lzb21vcnBoaWMtdW5mZXRjaCc7XG5pbXBvcnQgV2VhdGhlciBmcm9tICcuLi9jb21wb25lbnRzL1dlYXRoZXInO1xuXG5jb25zdCBJbmRleCA9IChwcm9wcykgPT4gKFxuXG4gIDxkaXY+XG4gICAgPGgxPntwcm9wcy5pbmZvLm5hbWV9IFdlYXRoZXI8L2gxPlxuXG4gICAgPHA+Q291bnRyeToge3Byb3BzLmluZm8uY291bnRyeX08L3A+XG4gICAgPHA+TGF0dGl0dWRlOiB7cHJvcHMuaW5mby5jb29yZC5sYXR9PC9wPlxuICAgIDxwPkxvbmdpdHVkZToge3Byb3BzLmluZm8uY29vcmQubG9ufTwvcD5cbiAgICA8cD5UZW1wOiB7cHJvcHMuY3VycmVudFdlYXRoZXIubWFpbi50ZW1wfTwvcD5cbiAgICA8cD5GZWVscyBMaWtlOiB7cHJvcHMuY3VycmVudFdlYXRoZXIubWFpbi5mZWVsc19saWtlfTwvcD5cbiAgICA8cD5IdW1pZGl0eToge3Byb3BzLmN1cnJlbnRXZWF0aGVyLm1haW4uaHVtaWRpdHl9ICU8L3A+XG4gICAgPHA+RGVzY3JpcHRpb246IHtwcm9wcy5jdXJyZW50V2VhdGhlci53ZWF0aGVyWzBdLmRlc2NyaXB0aW9ufTwvcD5cbiAgICA8cD5XaW5kc3BlZWQ6IHtwcm9wcy5jdXJyZW50V2VhdGhlci53aW5kLnNwZWVkfTwvcD5cbiAgICA8c3R5bGUganN4PntgXG4gICAgICBoMSwge1xuICAgICAgICAgIGZvbnQtZmFtaWx5OiAnT3BlbiBTYW5zJztcbiAgICAgICAgICBjb2xvcjogZ3JleVxuICAgICAgfVxuICBgfTwvc3R5bGU+XG4gIDwvZGl2PlxuXG4pXG5cbkluZGV4LmdldEluaXRpYWxQcm9wcyA9IGFzeW5jICgpID0+IHtcbiAgICBjb25zdCByZXNwb25zZSA9IGF3YWl0IGZldGNoKCdodHRwczovL2FwaS5vcGVud2VhdGhlcm1hcC5vcmcvZGF0YS8yLjUvZm9yZWNhc3Q/emlwPTExNTk2LHVzJkFQUElEPWM5YTA2MDRmZjc2MzUwYjMyODIzMjEwYmM2Mzg4YmNiJyk7XG4gICAgY29uc3Qgd2VhdGhlciA9IGF3YWl0IHJlc3BvbnNlLmpzb24oKVxuICAgIGNvbnN0IGluZm8gPSBhd2FpdCB3ZWF0aGVyLmNpdHlcbiAgICBjb25zdCBjdXJyZW50V2VhdGhlciA9IGF3YWl0IHdlYXRoZXIubGlzdFswXVxuICAgIGNvbnNvbGUubG9nKGluZm8pXG4gICAgY29uc29sZS5sb2coY3VycmVudFdlYXRoZXIpXG4gICAgcmV0dXJuIHtcbiAgICAgICAgaW5mbzogaW5mbyxcbiAgICAgICAgY3VycmVudFdlYXRoZXI6IGN1cnJlbnRXZWF0aGVyXG4gICAgfVxuXG59XG5cbmV4cG9ydCBkZWZhdWx0IEluZGV4O1xuIl19 */\\n/*@ sourceURL=/Users/michaelmerlo/newProjects/nextProj/pages/index.js */\"));\n};\n\nIndex.getInitialProps = function _callee() {\n  var response, weather, info, currentWeather;\n  return _regeneratorRuntime.async(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return _regeneratorRuntime.awrap(fetch('https://api.openweathermap.org/data/2.5/forecast?zip=11596,us&APPID=c9a0604ff76350b32823210bc6388bcb'));\n\n        case 2:\n          response = _context.sent;\n          _context.next = 5;\n          return _regeneratorRuntime.awrap(response.json());\n\n        case 5:\n          weather = _context.sent;\n          _context.next = 8;\n          return _regeneratorRuntime.awrap(weather.city);\n\n        case 8:\n          info = _context.sent;\n          _context.next = 11;\n          return _regeneratorRuntime.awrap(weather.list[0]);\n\n        case 11:\n          currentWeather = _context.sent;\n          console.log(info);\n          console.log(currentWeather);\n          return _context.abrupt(\"return\", {\n            info: info,\n            currentWeather: currentWeather\n          });\n\n        case 15:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  });\n};\n\nexport default Index;","map":{"version":3,"sources":["/Users/michaelmerlo/newProjects/nextProj/pages/index.js"],"names":["Link","Layout","fetch","Weather","Index","props","info","name","country","coord","lat","lon","currentWeather","main","temp","feels_like","humidity","weather","description","wind","speed","getInitialProps","response","json","city","list","console","log"],"mappings":";;;;;AAAA,OAAOA,IAAP,MAAiB,WAAjB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,OAAOC,OAAP,MAAoB,uBAApB;;AAEA,IAAMC,KAAK,GAAG,SAARA,KAAQ,CAACC,KAAD;AAAA,SAEZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKA,KAAK,CAACC,IAAN,CAAWC,IAAhB,aADF,EAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAaF,KAAK,CAACC,IAAN,CAAWE,OAAxB,CAHF,EAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAeH,KAAK,CAACC,IAAN,CAAWG,KAAX,CAAiBC,GAAhC,CAJF,EAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAeL,KAAK,CAACC,IAAN,CAAWG,KAAX,CAAiBE,GAAhC,CALF,EAME;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAAUN,KAAK,CAACO,cAAN,CAAqBC,IAArB,CAA0BC,IAApC,CANF,EAOE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAAgBT,KAAK,CAACO,cAAN,CAAqBC,IAArB,CAA0BE,UAA1C,CAPF,EAQE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAAcV,KAAK,CAACO,cAAN,CAAqBC,IAArB,CAA0BG,QAAxC,OARF,EASE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAiBX,KAAK,CAACO,cAAN,CAAqBK,OAArB,CAA6B,CAA7B,EAAgCC,WAAjD,CATF,EAUE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAeb,KAAK,CAACO,cAAN,CAAqBO,IAArB,CAA0BC,KAAzC,CAVF;AAAA;AAAA;AAAA,0rEAFY;AAAA,CAAd;;AAuBAhB,KAAK,CAACiB,eAAN,GAAwB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2CACGnB,KAAK,CAAC,sGAAD,CADR;;AAAA;AACdoB,UAAAA,QADc;AAAA;AAAA,2CAEEA,QAAQ,CAACC,IAAT,EAFF;;AAAA;AAEdN,UAAAA,OAFc;AAAA;AAAA,2CAGDA,OAAO,CAACO,IAHP;;AAAA;AAGdlB,UAAAA,IAHc;AAAA;AAAA,2CAISW,OAAO,CAACQ,IAAR,CAAa,CAAb,CAJT;;AAAA;AAIdb,UAAAA,cAJc;AAKpBc,UAAAA,OAAO,CAACC,GAAR,CAAYrB,IAAZ;AACAoB,UAAAA,OAAO,CAACC,GAAR,CAAYf,cAAZ;AANoB,2CAOb;AACHN,YAAAA,IAAI,EAAEA,IADH;AAEHM,YAAAA,cAAc,EAAEA;AAFb,WAPa;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAxB;;AAcA,eAAeR,KAAf","sourcesContent":["import Link from 'next/link';\nimport Layout from '../components/Layout';\nimport fetch from 'isomorphic-unfetch';\nimport Weather from '../components/Weather';\n\nconst Index = (props) => (\n\n  <div>\n    <h1>{props.info.name} Weather</h1>\n\n    <p>Country: {props.info.country}</p>\n    <p>Lattitude: {props.info.coord.lat}</p>\n    <p>Longitude: {props.info.coord.lon}</p>\n    <p>Temp: {props.currentWeather.main.temp}</p>\n    <p>Feels Like: {props.currentWeather.main.feels_like}</p>\n    <p>Humidity: {props.currentWeather.main.humidity} %</p>\n    <p>Description: {props.currentWeather.weather[0].description}</p>\n    <p>Windspeed: {props.currentWeather.wind.speed}</p>\n    <style jsx>{`\n      h1, {\n          font-family: 'Open Sans';\n          color: grey\n      }\n  `}</style>\n  </div>\n\n)\n\nIndex.getInitialProps = async () => {\n    const response = await fetch('https://api.openweathermap.org/data/2.5/forecast?zip=11596,us&APPID=c9a0604ff76350b32823210bc6388bcb');\n    const weather = await response.json()\n    const info = await weather.city\n    const currentWeather = await weather.list[0]\n    console.log(info)\n    console.log(currentWeather)\n    return {\n        info: info,\n        currentWeather: currentWeather\n    }\n\n}\n\nexport default Index;\n"]},"metadata":{},"sourceType":"module"}